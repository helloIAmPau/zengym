services:
  ingress:
    image: 'caddy:2.8.4-alpine'
    restart: 'always'
    ports:
      - '80:80'
    volumes:
      - './Caddyfile:/etc/caddy/Caddyfile:ro'
      - './data/caddy/data:/data'
      - './data/caddy/config:/config'
    networks:
      - 'frontend'
  events:
    image: 'zengym/events:0.0.0'
    restart: 'always'
    build:
      args:
        service: 'events'
    environment:
      - 'POSTGRES_PASSWORD=${ZENGYM_POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${ZENGYM_POSTGRES_USER}'
      - 'POSTGRES_DB=${ZENGYM_POSTGRES_DB}'
    networks:
      - 'frontend'
      - 'backend'
  graphql:
    image: 'zengym/graphql:0.0.0'
    restart: 'always'
    build:
      args:
        service: 'graphql'
    environment:
      - 'GOOGLE_GEMINI_API_KEY=${ZENGYM_GOOGLE_GEMINI_API_KEY}'
      - 'POSTGRES_PASSWORD=${ZENGYM_POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${ZENGYM_POSTGRES_USER}'
      - 'POSTGRES_DB=${ZENGYM_POSTGRES_DB}'
    networks:
      - 'frontend'
      - 'backend'
  postgres:
    image: 'postgres:17.2-alpine'
    restart: 'always'
    environment:
      - 'POSTGRES_PASSWORD=${ZENGYM_POSTGRES_PASSWORD}'
      - 'POSTGRES_USER=${ZENGYM_POSTGRES_USER}'
      - 'POSTGRES_DB=${ZENGYM_POSTGRES_DB}'
    volumes:
      - './data/postgres:/var/lib/postgresql/data'
    networks:
      - 'backend'

networks:
  frontend:
  backend:
